on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install --force

      - name: Debug Secrets
        run: |
          echo "Checking if environment variables are available..."
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}"
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}"
          echo "AWS_REGION=${{ secrets.AWS_REGION }}"

      - name: Create .env file
        run: |
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "AUTH_SECRET=${{ secrets.AUTH_SECRET }}" >> .env
          echo "AUTH_DISCORD_ID=${{ secrets.AUTH_DISCORD_ID }}" >> .env
          echo "AUTH_DISCORD_SECRET=${{ secrets.AUTH_DISCORD_SECRET }}" >> .env

      - name: Run TypeScript build
        run: npm run build --if-present

      - name: Deploy to AWS with SST
        run: |
          echo "Deploying to AWS..."
          npx sst deploy --stage production --verbose
    
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          

      - name: Invalidate CloudFront Cache
        run: |
          echo "Invalidating CloudFront cache..."
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'ap-south-1'

      - name: Notify on deployment success
        run: echo "Deployment to AWS was successful!"